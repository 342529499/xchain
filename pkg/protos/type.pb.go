// Code generated by protoc-gen-go.
// source: type.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EndPoint_Type int32

const (
	EndPoint_UNDEFINED     EndPoint_Type = 0
	EndPoint_VALIDATOR     EndPoint_Type = 1
	EndPoint_NON_VALIDATOR EndPoint_Type = 2
)

var EndPoint_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "VALIDATOR",
	2: "NON_VALIDATOR",
}
var EndPoint_Type_value = map[string]int32{
	"UNDEFINED":     0,
	"VALIDATOR":     1,
	"NON_VALIDATOR": 2,
}

func (x EndPoint_Type) String() string {
	return proto.EnumName(EndPoint_Type_name, int32(x))
}
func (EndPoint_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0, 0} }

type HandShake_Type int32

const (
	HandShake_UNDEFINED            HandShake_Type = 0
	HandShake_Net_HANDSHAKE_FIRST  HandShake_Type = 1
	HandShake_Net_HANDSHAKE_SECOND HandShake_Type = 2
	HandShake_Net_HANDSHAKE_THIRD  HandShake_Type = 3
)

var HandShake_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "Net_HANDSHAKE_FIRST",
	2: "Net_HANDSHAKE_SECOND",
	3: "Net_HANDSHAKE_THIRD",
}
var HandShake_Type_value = map[string]int32{
	"UNDEFINED":            0,
	"Net_HANDSHAKE_FIRST":  1,
	"Net_HANDSHAKE_SECOND": 2,
	"Net_HANDSHAKE_THIRD":  3,
}

func (x HandShake_Type) String() string {
	return proto.EnumName(HandShake_Type_name, int32(x))
}
func (HandShake_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{1, 0} }

type HandShakeResponse_Type int32

const (
	HandShakeResponse_UNDEFINED                     HandShakeResponse_Type = 0
	HandShakeResponse_Net_HANDSHAKE_FIRST_RESPONSE  HandShakeResponse_Type = 1
	HandShakeResponse_Net_HANDSHAKE_SECOND_RESPONSE HandShakeResponse_Type = 2
	HandShakeResponse_Net_HANDSHAKE_THIRD_RESPONSE  HandShakeResponse_Type = 3
)

var HandShakeResponse_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "Net_HANDSHAKE_FIRST_RESPONSE",
	2: "Net_HANDSHAKE_SECOND_RESPONSE",
	3: "Net_HANDSHAKE_THIRD_RESPONSE",
}
var HandShakeResponse_Type_value = map[string]int32{
	"UNDEFINED":                     0,
	"Net_HANDSHAKE_FIRST_RESPONSE":  1,
	"Net_HANDSHAKE_SECOND_RESPONSE": 2,
	"Net_HANDSHAKE_THIRD_RESPONSE":  3,
}

func (x HandShakeResponse_Type) String() string {
	return proto.EnumName(HandShakeResponse_Type_name, int32(x))
}
func (HandShakeResponse_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{2, 0} }

type EndPoint struct {
	Id      string        `protobuf:"bytes,1,opt,name=Id,json=id" json:"Id,omitempty"`
	Address string        `protobuf:"bytes,2,opt,name=Address,json=address" json:"Address,omitempty"`
	Type    EndPoint_Type `protobuf:"varint,3,opt,name=type,enum=protos.EndPoint_Type" json:"type,omitempty"`
}

func (m *EndPoint) Reset()                    { *m = EndPoint{} }
func (m *EndPoint) String() string            { return proto.CompactTextString(m) }
func (*EndPoint) ProtoMessage()               {}
func (*EndPoint) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type HandShake struct {
	Type      HandShake_Type             `protobuf:"varint,1,opt,name=type,enum=protos.HandShake_Type" json:"type,omitempty"`
	EndPoint  *EndPoint                  `protobuf:"bytes,2,opt,name=endPoint" json:"endPoint,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *HandShake) Reset()                    { *m = HandShake{} }
func (m *HandShake) String() string            { return proto.CompactTextString(m) }
func (*HandShake) ProtoMessage()               {}
func (*HandShake) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *HandShake) GetEndPoint() *EndPoint {
	if m != nil {
		return m.EndPoint
	}
	return nil
}

func (m *HandShake) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type HandShakeResponse struct {
	Type      HandShakeResponse_Type     `protobuf:"varint,1,opt,name=type,enum=protos.HandShakeResponse_Type" json:"type,omitempty"`
	Msg       []byte                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *HandShakeResponse) Reset()                    { *m = HandShakeResponse{} }
func (m *HandShakeResponse) String() string            { return proto.CompactTextString(m) }
func (*HandShakeResponse) ProtoMessage()               {}
func (*HandShakeResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *HandShakeResponse) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Ping struct {
	EndPoint []*EndPoint `protobuf:"bytes,1,rep,name=endPoint" json:"endPoint,omitempty"`
}

func (m *Ping) Reset()                    { *m = Ping{} }
func (m *Ping) String() string            { return proto.CompactTextString(m) }
func (*Ping) ProtoMessage()               {}
func (*Ping) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *Ping) GetEndPoint() []*EndPoint {
	if m != nil {
		return m.EndPoint
	}
	return nil
}

func init() {
	proto.RegisterType((*EndPoint)(nil), "protos.EndPoint")
	proto.RegisterType((*HandShake)(nil), "protos.HandShake")
	proto.RegisterType((*HandShakeResponse)(nil), "protos.HandShakeResponse")
	proto.RegisterType((*Ping)(nil), "protos.Ping")
	proto.RegisterEnum("protos.EndPoint_Type", EndPoint_Type_name, EndPoint_Type_value)
	proto.RegisterEnum("protos.HandShake_Type", HandShake_Type_name, HandShake_Type_value)
	proto.RegisterEnum("protos.HandShakeResponse_Type", HandShakeResponse_Type_name, HandShakeResponse_Type_value)
}

func init() { proto.RegisterFile("type.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 395 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x93, 0x4d, 0xcf, 0x93, 0x40,
	0x14, 0x85, 0x65, 0x68, 0x7c, 0x5f, 0x6e, 0x6d, 0x43, 0xc7, 0x2f, 0xd2, 0xf8, 0x51, 0x59, 0xa9,
	0x31, 0x34, 0x41, 0x13, 0xdd, 0x12, 0xa1, 0x81, 0x68, 0x86, 0x66, 0x40, 0xb7, 0x84, 0x86, 0x11,
	0x89, 0x16, 0x48, 0x07, 0x17, 0x26, 0xae, 0xfc, 0x07, 0xee, 0xfc, 0xb9, 0xc2, 0x50, 0xa0, 0xb5,
	0xc4, 0x8d, 0x2b, 0xb8, 0x77, 0x0e, 0xf7, 0xdc, 0xf3, 0x4c, 0x00, 0xa8, 0xbe, 0x97, 0xcc, 0x28,
	0x0f, 0x45, 0x55, 0xe0, 0x9b, 0xe2, 0xc1, 0x97, 0x8f, 0xd3, 0xa2, 0x48, 0xbf, 0xb2, 0xb5, 0x28,
	0x77, 0xdf, 0x3e, 0xad, 0xab, 0x6c, 0xcf, 0x78, 0x15, 0xef, 0xcb, 0x56, 0xa8, 0xff, 0x96, 0xe0,
	0xda, 0xc9, 0x93, 0x6d, 0x91, 0xe5, 0x15, 0x9e, 0x03, 0xf2, 0x12, 0x4d, 0x5a, 0x49, 0x4f, 0x15,
	0x8a, 0xb2, 0x04, 0x6b, 0x70, 0x65, 0x25, 0xc9, 0x81, 0x71, 0xae, 0x21, 0xd1, 0xbc, 0x8a, 0xdb,
	0x12, 0x3f, 0x83, 0x49, 0xe3, 0xa6, 0xc9, 0x75, 0x7b, 0x6e, 0xde, 0x6d, 0x87, 0x71, 0xa3, 0x9b,
	0x64, 0x84, 0xf5, 0x21, 0x15, 0x12, 0xfd, 0x35, 0x4c, 0x9a, 0x0a, 0xcf, 0x40, 0xf9, 0x40, 0x6c,
	0x67, 0xe3, 0x11, 0xc7, 0x56, 0x6f, 0x34, 0xe5, 0x47, 0xeb, 0xbd, 0x67, 0x5b, 0xa1, 0x4f, 0x55,
	0x09, 0x2f, 0x60, 0x46, 0x7c, 0x12, 0x0d, 0x2d, 0xa4, 0xff, 0x44, 0xa0, 0xb8, 0x71, 0x9e, 0x04,
	0x9f, 0xe3, 0x2f, 0x0c, 0x3f, 0x3f, 0x3a, 0x4a, 0xc2, 0xf1, 0x5e, 0xe7, 0xd8, 0x0b, 0x4e, 0x2c,
	0xf1, 0x0b, 0xb8, 0x66, 0xc7, 0x4d, 0xc4, 0xe2, 0x53, 0x53, 0xfd, 0x7b, 0x43, 0xda, 0x2b, 0xf0,
	0x1b, 0x50, 0x7a, 0x2a, 0x22, 0xd0, 0xd4, 0x5c, 0x1a, 0x2d, 0x37, 0xa3, 0xe3, 0x66, 0x84, 0x9d,
	0x82, 0x0e, 0x62, 0x3d, 0x1e, 0x8f, 0x76, 0x1f, 0x6e, 0x13, 0x56, 0x45, 0xae, 0x45, 0xec, 0xc0,
	0xb5, 0xde, 0x39, 0xd1, 0xc6, 0xa3, 0x41, 0x58, 0x87, 0xd4, 0xe0, 0xce, 0xf9, 0x41, 0xe0, 0xbc,
	0xf5, 0x89, 0xad, 0xa2, 0xcb, 0x4f, 0x42, 0xd7, 0xa3, 0xb6, 0x2a, 0xeb, 0xbf, 0x10, 0x2c, 0xfa,
	0x8c, 0x94, 0xf1, 0xb2, 0xc8, 0x39, 0xc3, 0xe6, 0x19, 0x8c, 0x47, 0x17, 0x30, 0x3a, 0xe1, 0x29,
	0x14, 0x15, 0xe4, 0x3d, 0x4f, 0x05, 0x8f, 0x5b, 0xb4, 0x79, 0xfd, 0x8f, 0xe0, 0x3f, 0xc6, 0x83,
	0xaf, 0xe0, 0xc1, 0x48, 0xf0, 0x88, 0x3a, 0xc1, 0xd6, 0x27, 0x81, 0x53, 0x13, 0x78, 0x02, 0x0f,
	0xc7, 0x08, 0x0c, 0x12, 0x74, 0x39, 0x44, 0xa0, 0x18, 0x14, 0xb2, 0xfe, 0x0a, 0x26, 0xdb, 0x2c,
	0x4f, 0xcf, 0xae, 0x59, 0x5a, 0xc9, 0xff, 0xbe, 0xe6, 0x5d, 0xfb, 0x4b, 0xbc, 0xfc, 0x13, 0x00,
	0x00, 0xff, 0xff, 0xb6, 0x8d, 0x06, 0xae, 0x27, 0x03, 0x00, 0x00,
}
