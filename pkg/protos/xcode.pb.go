// Code generated by protoc-gen-go.
// source: xcode.proto
// DO NOT EDIT!

package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Instruction_Type int32

const (
	Instruction_UNDEFINED Instruction_Type = 0
	Instruction_START     Instruction_Type = 1
	Instruction_KEEPALIVE Instruction_Type = 2
	Instruction_ERROR     Instruction_Type = 3
	Instruction_INIT      Instruction_Type = 4
	Instruction_INVOKE    Instruction_Type = 5
	Instruction_QUERY     Instruction_Type = 6
	Instruction_STATE     Instruction_Type = 7
)

var Instruction_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "START",
	2: "KEEPALIVE",
	3: "ERROR",
	4: "INIT",
	5: "INVOKE",
	6: "QUERY",
	7: "STATE",
}
var Instruction_Type_value = map[string]int32{
	"UNDEFINED": 0,
	"START":     1,
	"KEEPALIVE": 2,
	"ERROR":     3,
	"INIT":      4,
	"INVOKE":    5,
	"QUERY":     6,
	"STATE":     7,
}

func (x Instruction_Type) String() string {
	return proto.EnumName(Instruction_Type_name, int32(x))
}
func (Instruction_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0, 0} }

type Instruction_State_Type int32

const (
	Instruction_State_UNDEFINED Instruction_State_Type = 0
	Instruction_State_PUT       Instruction_State_Type = 1
	Instruction_State_GET       Instruction_State_Type = 2
	Instruction_State_DELETE    Instruction_State_Type = 3
)

var Instruction_State_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "PUT",
	2: "GET",
	3: "DELETE",
}
var Instruction_State_Type_value = map[string]int32{
	"UNDEFINED": 0,
	"PUT":       1,
	"GET":       2,
	"DELETE":    3,
}

func (x Instruction_State_Type) String() string {
	return proto.EnumName(Instruction_State_Type_name, int32(x))
}
func (Instruction_State_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{6, 0} }

type XCodeSpec_Type int32

const (
	XCodeSpec_UNDEFINED XCodeSpec_Type = 0
	XCodeSpec_GOLANG    XCodeSpec_Type = 1
	XCodeSpec_PYTHON    XCodeSpec_Type = 2
	XCodeSpec_JAVA      XCodeSpec_Type = 3
)

var XCodeSpec_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "GOLANG",
	2: "PYTHON",
	3: "JAVA",
}
var XCodeSpec_Type_value = map[string]int32{
	"UNDEFINED": 0,
	"GOLANG":    1,
	"PYTHON":    2,
	"JAVA":      3,
}

func (x XCodeSpec_Type) String() string {
	return proto.EnumName(XCodeSpec_Type_name, int32(x))
}
func (XCodeSpec_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{7, 0} }

type XCodeStateSpec_Type int32

const (
	XCodeStateSpec_UNDEFINED XCodeStateSpec_Type = 0
	XCodeStateSpec_GET       XCodeStateSpec_Type = 1
	XCodeStateSpec_PUT       XCodeStateSpec_Type = 2
	XCodeStateSpec_DELETE    XCodeStateSpec_Type = 3
)

var XCodeStateSpec_Type_name = map[int32]string{
	0: "UNDEFINED",
	1: "GET",
	2: "PUT",
	3: "DELETE",
}
var XCodeStateSpec_Type_value = map[string]int32{
	"UNDEFINED": 0,
	"GET":       1,
	"PUT":       2,
	"DELETE":    3,
}

func (x XCodeStateSpec_Type) String() string {
	return proto.EnumName(XCodeStateSpec_Type_name, int32(x))
}
func (XCodeStateSpec_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{8, 0} }

type Instruction struct {
	Action     Action           `protobuf:"varint,1,opt,name=action,enum=protos.Action" json:"action,omitempty"`
	Type       Instruction_Type `protobuf:"varint,2,opt,name=type,enum=protos.Instruction_Type" json:"type,omitempty"`
	Identifier int64            `protobuf:"varint,4,opt,name=identifier" json:"identifier,omitempty"`
	Payload    []byte           `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (m *Instruction) Reset()                    { *m = Instruction{} }
func (m *Instruction) String() string            { return proto.CompactTextString(m) }
func (*Instruction) ProtoMessage()               {}
func (*Instruction) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type Instruction_Start struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	Lang    string `protobuf:"bytes,3,opt,name=lang" json:"lang,omitempty"`
}

func (m *Instruction_Start) Reset()                    { *m = Instruction_Start{} }
func (m *Instruction_Start) String() string            { return proto.CompactTextString(m) }
func (*Instruction_Start) ProtoMessage()               {}
func (*Instruction_Start) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type InstructionUnit struct {
	TransactionID string   `protobuf:"bytes,1,opt,name=transactionID" json:"transactionID,omitempty"`
	Function      string   `protobuf:"bytes,2,opt,name=function" json:"function,omitempty"`
	Args          []string `protobuf:"bytes,3,rep,name=args" json:"args,omitempty"`
}

func (m *InstructionUnit) Reset()                    { *m = InstructionUnit{} }
func (m *InstructionUnit) String() string            { return proto.CompactTextString(m) }
func (*InstructionUnit) ProtoMessage()               {}
func (*InstructionUnit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type Instruction_Init struct {
	Init *InstructionUnit `protobuf:"bytes,1,opt,name=init" json:"init,omitempty"`
}

func (m *Instruction_Init) Reset()                    { *m = Instruction_Init{} }
func (m *Instruction_Init) String() string            { return proto.CompactTextString(m) }
func (*Instruction_Init) ProtoMessage()               {}
func (*Instruction_Init) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *Instruction_Init) GetInit() *InstructionUnit {
	if m != nil {
		return m.Init
	}
	return nil
}

type Instruction_Invoke struct {
	Invoke *InstructionUnit `protobuf:"bytes,1,opt,name=invoke" json:"invoke,omitempty"`
}

func (m *Instruction_Invoke) Reset()                    { *m = Instruction_Invoke{} }
func (m *Instruction_Invoke) String() string            { return proto.CompactTextString(m) }
func (*Instruction_Invoke) ProtoMessage()               {}
func (*Instruction_Invoke) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *Instruction_Invoke) GetInvoke() *InstructionUnit {
	if m != nil {
		return m.Invoke
	}
	return nil
}

type Instruction_Query struct {
	Query *InstructionUnit `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *Instruction_Query) Reset()                    { *m = Instruction_Query{} }
func (m *Instruction_Query) String() string            { return proto.CompactTextString(m) }
func (*Instruction_Query) ProtoMessage()               {}
func (*Instruction_Query) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *Instruction_Query) GetQuery() *InstructionUnit {
	if m != nil {
		return m.Query
	}
	return nil
}

type Instruction_State struct {
	Type  Instruction_State_Type `protobuf:"varint,1,opt,name=type,enum=protos.Instruction_State_Type" json:"type,omitempty"`
	Key   string                 `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value []byte                 `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Instruction_State) Reset()                    { *m = Instruction_State{} }
func (m *Instruction_State) String() string            { return proto.CompactTextString(m) }
func (*Instruction_State) ProtoMessage()               {}
func (*Instruction_State) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

type XCodeSpec struct {
	Type       XCodeSpec_Type `protobuf:"varint,1,opt,name=type,enum=protos.XCodeSpec_Type" json:"type,omitempty"`
	XcodeID    *XCodeID       `protobuf:"bytes,2,opt,name=xcodeID" json:"xcodeID,omitempty"`
	XcodeMsg   *XCodeInput    `protobuf:"bytes,3,opt,name=xcodeMsg" json:"xcodeMsg,omitempty"`
	Timeout    int32          `protobuf:"varint,4,opt,name=timeout" json:"timeout,omitempty"`
	Metadata   []byte         `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Attributes []string       `protobuf:"bytes,6,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *XCodeSpec) Reset()                    { *m = XCodeSpec{} }
func (m *XCodeSpec) String() string            { return proto.CompactTextString(m) }
func (*XCodeSpec) ProtoMessage()               {}
func (*XCodeSpec) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *XCodeSpec) GetXcodeID() *XCodeID {
	if m != nil {
		return m.XcodeID
	}
	return nil
}

func (m *XCodeSpec) GetXcodeMsg() *XCodeInput {
	if m != nil {
		return m.XcodeMsg
	}
	return nil
}

type XCodeStateSpec struct {
	Type  XCodeStateSpec_Type `protobuf:"varint,1,opt,name=type,enum=protos.XCodeStateSpec_Type" json:"type,omitempty"`
	Key   string              `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value []byte              `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *XCodeStateSpec) Reset()                    { *m = XCodeStateSpec{} }
func (m *XCodeStateSpec) String() string            { return proto.CompactTextString(m) }
func (*XCodeStateSpec) ProtoMessage()               {}
func (*XCodeStateSpec) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

type XCodeID struct {
	Path string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *XCodeID) Reset()                    { *m = XCodeID{} }
func (m *XCodeID) String() string            { return proto.CompactTextString(m) }
func (*XCodeID) ProtoMessage()               {}
func (*XCodeID) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

type XCodeInput struct {
	Args [][]byte `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
}

func (m *XCodeInput) Reset()                    { *m = XCodeInput{} }
func (m *XCodeInput) String() string            { return proto.CompactTextString(m) }
func (*XCodeInput) ProtoMessage()               {}
func (*XCodeInput) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func init() {
	proto.RegisterType((*Instruction)(nil), "protos.Instruction")
	proto.RegisterType((*Instruction_Start)(nil), "protos.Instruction_Start")
	proto.RegisterType((*InstructionUnit)(nil), "protos.instructionUnit")
	proto.RegisterType((*Instruction_Init)(nil), "protos.Instruction_Init")
	proto.RegisterType((*Instruction_Invoke)(nil), "protos.Instruction_Invoke")
	proto.RegisterType((*Instruction_Query)(nil), "protos.Instruction_Query")
	proto.RegisterType((*Instruction_State)(nil), "protos.Instruction_State")
	proto.RegisterType((*XCodeSpec)(nil), "protos.XCodeSpec")
	proto.RegisterType((*XCodeStateSpec)(nil), "protos.XCodeStateSpec")
	proto.RegisterType((*XCodeID)(nil), "protos.XCodeID")
	proto.RegisterType((*XCodeInput)(nil), "protos.XCodeInput")
	proto.RegisterEnum("protos.Instruction_Type", Instruction_Type_name, Instruction_Type_value)
	proto.RegisterEnum("protos.Instruction_State_Type", Instruction_State_Type_name, Instruction_State_Type_value)
	proto.RegisterEnum("protos.XCodeSpec_Type", XCodeSpec_Type_name, XCodeSpec_Type_value)
	proto.RegisterEnum("protos.XCodeStateSpec_Type", XCodeStateSpec_Type_name, XCodeStateSpec_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for CodeService service

type CodeServiceClient interface {
	Execute(ctx context.Context, opts ...grpc.CallOption) (CodeService_ExecuteClient, error)
}

type codeServiceClient struct {
	cc *grpc.ClientConn
}

func NewCodeServiceClient(cc *grpc.ClientConn) CodeServiceClient {
	return &codeServiceClient{cc}
}

func (c *codeServiceClient) Execute(ctx context.Context, opts ...grpc.CallOption) (CodeService_ExecuteClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_CodeService_serviceDesc.Streams[0], c.cc, "/protos.CodeService/execute", opts...)
	if err != nil {
		return nil, err
	}
	x := &codeServiceExecuteClient{stream}
	return x, nil
}

type CodeService_ExecuteClient interface {
	Send(*Instruction) error
	Recv() (*Instruction, error)
	grpc.ClientStream
}

type codeServiceExecuteClient struct {
	grpc.ClientStream
}

func (x *codeServiceExecuteClient) Send(m *Instruction) error {
	return x.ClientStream.SendMsg(m)
}

func (x *codeServiceExecuteClient) Recv() (*Instruction, error) {
	m := new(Instruction)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for CodeService service

type CodeServiceServer interface {
	Execute(CodeService_ExecuteServer) error
}

func RegisterCodeServiceServer(s *grpc.Server, srv CodeServiceServer) {
	s.RegisterService(&_CodeService_serviceDesc, srv)
}

func _CodeService_Execute_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CodeServiceServer).Execute(&codeServiceExecuteServer{stream})
}

type CodeService_ExecuteServer interface {
	Send(*Instruction) error
	Recv() (*Instruction, error)
	grpc.ServerStream
}

type codeServiceExecuteServer struct {
	grpc.ServerStream
}

func (x *codeServiceExecuteServer) Send(m *Instruction) error {
	return x.ServerStream.SendMsg(m)
}

func (x *codeServiceExecuteServer) Recv() (*Instruction, error) {
	m := new(Instruction)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.CodeService",
	HandlerType: (*CodeServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "execute",
			Handler:       _CodeService_Execute_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: fileDescriptor2,
}

func init() { proto.RegisterFile("xcode.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 700 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xac, 0x54, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0xae, 0x63, 0x27, 0x69, 0x26, 0x3d, 0xf8, 0xdf, 0x1f, 0x81, 0x55, 0xa4, 0xaa, 0x5a, 0x21,
	0x54, 0x4e, 0x29, 0xa4, 0x17, 0x88, 0x2b, 0x14, 0xc8, 0xd2, 0x9a, 0x96, 0xa4, 0xdd, 0x3a, 0x15,
	0xbd, 0x42, 0xdb, 0x64, 0x1b, 0xac, 0x36, 0x76, 0xb0, 0xd7, 0x55, 0xf3, 0x00, 0xbc, 0x06, 0x12,
	0x12, 0x0f, 0xca, 0xee, 0xda, 0x4e, 0x6d, 0x88, 0xd4, 0x1b, 0xae, 0x32, 0x87, 0x2f, 0x33, 0xb3,
	0xdf, 0x7c, 0x63, 0x68, 0xde, 0x0c, 0xc3, 0x11, 0x6f, 0x4d, 0xa3, 0x50, 0x84, 0xa8, 0xa6, 0x7f,
	0xe2, 0x8d, 0xd5, 0x09, 0x8f, 0x63, 0x36, 0xce, 0xc2, 0xf8, 0x7b, 0x05, 0x9a, 0x6e, 0x10, 0x8b,
	0x28, 0x19, 0x0a, 0x3f, 0x0c, 0xd0, 0x63, 0xa8, 0x31, 0x6d, 0x39, 0xc6, 0x96, 0xb1, 0xbd, 0xd6,
	0x5e, 0x4b, 0x71, 0x71, 0xab, 0xa3, 0xa3, 0x34, 0xcb, 0xa2, 0xe7, 0x60, 0x89, 0xd9, 0x94, 0x3b,
	0x15, 0x8d, 0x72, 0x72, 0x54, 0xa1, 0x54, 0xcb, 0x93, 0x79, 0xaa, 0x51, 0x68, 0x13, 0xc0, 0x1f,
	0xf1, 0x40, 0xf8, 0x17, 0x3e, 0x8f, 0x1c, 0x4b, 0xfe, 0xc7, 0xa4, 0x85, 0x08, 0x72, 0xa0, 0x3e,
	0x65, 0xb3, 0xab, 0x90, 0x8d, 0x1c, 0x53, 0x26, 0x57, 0x68, 0xee, 0xe2, 0x0b, 0xb0, 0x54, 0x1d,
	0xb4, 0x0a, 0x8d, 0x41, 0xaf, 0x4b, 0x3e, 0xb8, 0x3d, 0xd2, 0xb5, 0x97, 0x50, 0x03, 0xaa, 0x27,
	0x5e, 0x87, 0x7a, 0xb6, 0xa1, 0x32, 0x07, 0x84, 0x1c, 0x75, 0x0e, 0xdd, 0x53, 0x62, 0x57, 0x54,
	0x86, 0x50, 0xda, 0xa7, 0xb6, 0x89, 0x96, 0xc1, 0x72, 0x7b, 0xae, 0x67, 0x5b, 0x08, 0xa0, 0xe6,
	0xf6, 0x4e, 0xfb, 0x07, 0xc4, 0xae, 0x2a, 0xc0, 0xf1, 0x80, 0xd0, 0x33, 0xbb, 0x96, 0x55, 0xf1,
	0x88, 0x5d, 0xc7, 0x03, 0xf8, 0xaf, 0x30, 0xfb, 0x97, 0x13, 0xc1, 0x22, 0x81, 0x10, 0x58, 0x01,
	0x9b, 0x70, 0x4d, 0x45, 0x83, 0x6a, 0x5b, 0x8d, 0xca, 0x46, 0xa3, 0x48, 0x92, 0xa8, 0xdf, 0xde,
	0xa0, 0xb9, 0xab, 0xd0, 0x57, 0x2c, 0x18, 0xeb, 0x17, 0x48, 0xb4, 0xb2, 0xf1, 0x18, 0xd6, 0xfd,
	0xdb, 0xb2, 0x83, 0xc0, 0x17, 0xe8, 0x11, 0xac, 0x8a, 0x88, 0x05, 0x71, 0x4a, 0xa4, 0xdb, 0xcd,
	0xaa, 0x97, 0x83, 0x68, 0x03, 0x96, 0x2f, 0x92, 0x20, 0xdd, 0x44, 0xda, 0x67, 0xee, 0xab, 0x46,
	0x2c, 0x1a, 0xc7, 0xb2, 0x91, 0xa9, 0x1a, 0x29, 0x1b, 0xbf, 0x05, 0xbb, 0x38, 0xbf, 0xab, 0x3a,
	0x3d, 0x03, 0xcb, 0x97, 0xbf, 0xba, 0x41, 0xb3, 0xfd, 0x20, 0xdf, 0xd1, 0x1f, 0x03, 0x51, 0x0d,
	0xc2, 0x04, 0x50, 0xb9, 0xc0, 0x75, 0x78, 0xc9, 0xd1, 0x0e, 0xd4, 0x7c, 0x6d, 0xdd, 0x55, 0x24,
	0x83, 0xe1, 0x77, 0x65, 0x1e, 0x8f, 0x13, 0x1e, 0xcd, 0xd0, 0x0b, 0xa8, 0x7e, 0x53, 0xc6, 0x5d,
	0x45, 0x52, 0x14, 0xfe, 0x65, 0xfc, 0xb5, 0x0c, 0xc1, 0x51, 0x3b, 0x53, 0x5c, 0xaa, 0xcb, 0xcd,
	0x05, 0x8a, 0x4b, 0x81, 0x45, 0xdd, 0xd9, 0x60, 0x5e, 0xf2, 0x59, 0x46, 0xa0, 0x32, 0xd1, 0x3d,
	0xa8, 0x5e, 0xb3, 0xab, 0x84, 0x67, 0x3a, 0x4b, 0x1d, 0xbc, 0xbb, 0x58, 0x65, 0x75, 0x30, 0x8f,
	0x06, 0x4a, 0x63, 0xd2, 0xd8, 0x23, 0x9e, 0x54, 0x97, 0x14, 0x52, 0x97, 0x1c, 0x12, 0x29, 0x19,
	0x13, 0xff, 0xac, 0x40, 0xe3, 0xf3, 0x7b, 0x79, 0x61, 0x27, 0x53, 0x3e, 0x44, 0x4f, 0x4b, 0xe3,
	0xdd, 0xcf, 0xc7, 0x9b, 0x03, 0x8a, 0x63, 0x3d, 0x81, 0xba, 0x3e, 0x4d, 0xb9, 0xfc, 0x8a, 0x66,
	0x64, 0xbd, 0x04, 0x77, 0xbb, 0x34, 0xcf, 0xa3, 0x16, 0x2c, 0x6b, 0xf3, 0x53, 0x9c, 0x0a, 0xab,
	0xd9, 0x46, 0x65, 0x6c, 0x30, 0x4d, 0x04, 0x9d, 0x63, 0x94, 0x3c, 0x85, 0x3f, 0xe1, 0x61, 0x22,
	0xf4, 0x99, 0x55, 0x69, 0xee, 0x2a, 0x45, 0x4d, 0xb8, 0x60, 0x23, 0x26, 0x98, 0x53, 0xd5, 0x8f,
	0x9f, 0xfb, 0xea, 0x3e, 0x99, 0x10, 0x91, 0x7f, 0x9e, 0x08, 0x1e, 0x3b, 0x35, 0xad, 0xab, 0x42,
	0x04, 0xbf, 0x5e, 0xcc, 0x8f, 0x64, 0x63, 0xaf, 0x7f, 0xd8, 0xe9, 0xed, 0x49, 0x8a, 0xa4, 0x7d,
	0x74, 0xe6, 0xed, 0xf7, 0x7b, 0x92, 0x25, 0x79, 0x78, 0x1f, 0x3b, 0xa7, 0x1d, 0xc9, 0xd1, 0x0f,
	0x03, 0xd6, 0x52, 0x0a, 0xd4, 0x6a, 0x34, 0x51, 0x3b, 0x25, 0xa2, 0x1e, 0x96, 0x89, 0xca, 0x51,
	0xff, 0x76, 0x89, 0x6a, 0x77, 0x46, 0xbe, 0xcd, 0xf2, 0x12, 0x5f, 0x41, 0x3d, 0xe3, 0x5c, 0x9d,
	0xd5, 0x94, 0x89, 0xaf, 0xf9, 0xb5, 0x2b, 0x7b, 0xfe, 0x05, 0xa8, 0xdc, 0x7e, 0x01, 0xf0, 0x16,
	0xc0, 0x2d, 0xf5, 0xf3, 0x63, 0x34, 0x24, 0x69, 0x2b, 0xe9, 0x31, 0xb6, 0xf7, 0xa1, 0xa9, 0x5f,
	0xc3, 0xa3, 0x6b, 0x7f, 0xc8, 0xd1, 0x1b, 0xa8, 0xf3, 0x1b, 0x3e, 0x94, 0x4c, 0xa2, 0xff, 0x17,
	0xc8, 0x76, 0x63, 0x51, 0x10, 0x2f, 0x6d, 0x1b, 0x2f, 0x8d, 0xf3, 0xf4, 0xab, 0xbd, 0xfb, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0x06, 0x11, 0x12, 0x24, 0xcb, 0x05, 0x00, 0x00,
}
