// Code generated by protoc-gen-go.
// source: message.proto
// DO NOT EDIT!

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	message.proto
	type.proto

It has these top-level messages:
	Message
	EndPoint
	HandShake
	HandShakeResponse
	Ping
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Action int32

const (
	Action_Request  Action = 0
	Action_Response Action = 1
)

var Action_name = map[int32]string{
	0: "Request",
	1: "Response",
}
var Action_value = map[string]int32{
	"Request":  0,
	"Response": 1,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}
func (Action) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Message_Type int32

const (
	Message_UNDEFINED           Message_Type = 0
	Message_Net_HANDSHAKE       Message_Type = 1
	Message_Net_PING            Message_Type = 2
	Message_Contract_Create     Message_Type = 3
	Message_Contract_Run        Message_Type = 4
	Message_Contract_Query      Message_Type = 5
	Message_Code_State_Put      Message_Type = 6
	Message_Code_State_Get      Message_Type = 7
	Message_Ledger_Block_Create Message_Type = 8
	Message_Ledger_Block_Sync   Message_Type = 9
	Message_Identity_Share      Message_Type = 10
	Message_Error               Message_Type = 11
)

var Message_Type_name = map[int32]string{
	0:  "UNDEFINED",
	1:  "Net_HANDSHAKE",
	2:  "Net_PING",
	3:  "Contract_Create",
	4:  "Contract_Run",
	5:  "Contract_Query",
	6:  "Code_State_Put",
	7:  "Code_State_Get",
	8:  "Ledger_Block_Create",
	9:  "Ledger_Block_Sync",
	10: "Identity_Share",
	11: "Error",
}
var Message_Type_value = map[string]int32{
	"UNDEFINED":           0,
	"Net_HANDSHAKE":       1,
	"Net_PING":            2,
	"Contract_Create":     3,
	"Contract_Run":        4,
	"Contract_Query":      5,
	"Code_State_Put":      6,
	"Code_State_Get":      7,
	"Ledger_Block_Create": 8,
	"Ledger_Block_Sync":   9,
	"Identity_Share":      10,
	"Error":               11,
}

func (x Message_Type) String() string {
	return proto.EnumName(Message_Type_name, int32(x))
}
func (Message_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Message struct {
	Action    Action                     `protobuf:"varint,1,opt,name=action,enum=protos.Action" json:"action,omitempty"`
	Type      Message_Type               `protobuf:"varint,2,opt,name=type,enum=protos.Message_Type" json:"type,omitempty"`
	Payload   []byte                     `protobuf:"bytes,3,opt,name=payload,proto3" json:"payload,omitempty"`
	Timestamp *google_protobuf.Timestamp `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetTimestamp() *google_protobuf.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func init() {
	proto.RegisterType((*Message)(nil), "protos.Message")
	proto.RegisterEnum("protos.Action", Action_name, Action_value)
	proto.RegisterEnum("protos.Message_Type", Message_Type_name, Message_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Net service

type NetClient interface {
	Connect(ctx context.Context, opts ...grpc.CallOption) (Net_ConnectClient, error)
}

type netClient struct {
	cc *grpc.ClientConn
}

func NewNetClient(cc *grpc.ClientConn) NetClient {
	return &netClient{cc}
}

func (c *netClient) Connect(ctx context.Context, opts ...grpc.CallOption) (Net_ConnectClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Net_serviceDesc.Streams[0], c.cc, "/protos.net/connect", opts...)
	if err != nil {
		return nil, err
	}
	x := &netConnectClient{stream}
	return x, nil
}

type Net_ConnectClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type netConnectClient struct {
	grpc.ClientStream
}

func (x *netConnectClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *netConnectClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Net service

type NetServer interface {
	Connect(Net_ConnectServer) error
}

func RegisterNetServer(s *grpc.Server, srv NetServer) {
	s.RegisterService(&_Net_serviceDesc, srv)
}

func _Net_Connect_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NetServer).Connect(&netConnectServer{stream})
}

type Net_ConnectServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type netConnectServer struct {
	grpc.ServerStream
}

func (x *netConnectServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *netConnectServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Net_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.net",
	HandlerType: (*NetServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "connect",
			Handler:       _Net_Connect_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 391 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x92, 0xcd, 0x72, 0x93, 0x50,
	0x14, 0xc7, 0x4b, 0xa1, 0x50, 0x4e, 0x3e, 0x7a, 0x7b, 0xaa, 0x23, 0x93, 0x8d, 0x4e, 0x9c, 0x71,
	0x32, 0x2e, 0xa8, 0xc6, 0x4d, 0xb7, 0xb1, 0xc1, 0x36, 0xa3, 0x32, 0x15, 0xea, 0x9a, 0xa1, 0x70,
	0xc4, 0x8c, 0xe9, 0xbd, 0x78, 0xb9, 0x2c, 0x78, 0x15, 0x9f, 0xd0, 0xc7, 0xf0, 0x06, 0x42, 0x9c,
	0x66, 0xc5, 0x9c, 0xff, 0xff, 0x77, 0x3e, 0xb9, 0x30, 0x7a, 0xa4, 0xaa, 0x4a, 0x0b, 0xf2, 0x4b,
	0x29, 0x94, 0x40, 0xbb, 0xfd, 0x54, 0x93, 0x97, 0x85, 0x10, 0xc5, 0x86, 0x2e, 0xdb, 0xf0, 0xa1,
	0xfe, 0x71, 0xa9, 0xd6, 0x1a, 0x54, 0xe9, 0x63, 0xd9, 0x81, 0xd3, 0x3f, 0x26, 0x38, 0x5f, 0xbb,
	0x54, 0x7c, 0x03, 0x76, 0x9a, 0xa9, 0xb5, 0xe0, 0x9e, 0xf1, 0xca, 0x98, 0x8d, 0xe7, 0xe3, 0x8e,
	0xa9, 0xfc, 0x45, 0xab, 0x46, 0x3b, 0x17, 0x67, 0x60, 0xa9, 0xa6, 0x24, 0xef, 0xb8, 0xa5, 0x9e,
	0xf5, 0xd4, 0xae, 0x8c, 0x7f, 0xaf, 0xbd, 0xa8, 0x25, 0xd0, 0x03, 0xa7, 0x4c, 0x9b, 0x8d, 0x48,
	0x73, 0xcf, 0xd4, 0xf0, 0x30, 0xea, 0x43, 0xbc, 0x02, 0x77, 0x3f, 0x8a, 0x67, 0x69, 0x6f, 0x30,
	0x9f, 0xf8, 0xdd, 0xb0, 0x7e, 0x3f, 0xac, 0x7f, 0xdf, 0x13, 0xd1, 0x7f, 0x78, 0xfa, 0xd7, 0x00,
	0x6b, 0xdb, 0x02, 0x47, 0xe0, 0x7e, 0x0f, 0x97, 0xc1, 0xa7, 0x55, 0x18, 0x2c, 0xd9, 0x11, 0x9e,
	0xc3, 0x28, 0x24, 0x95, 0xdc, 0x2e, 0xc2, 0x65, 0x7c, 0xbb, 0xf8, 0x1c, 0x30, 0x03, 0x87, 0x70,
	0xba, 0x95, 0xee, 0x56, 0xe1, 0x0d, 0x3b, 0xc6, 0x0b, 0x38, 0xbb, 0x16, 0x5c, 0x49, 0xbd, 0x45,
	0x72, 0x2d, 0x29, 0x55, 0xc4, 0x4c, 0x64, 0x30, 0xdc, 0x8b, 0x51, 0xcd, 0x99, 0x85, 0x08, 0xe3,
	0xbd, 0xf2, 0xad, 0x26, 0xd9, 0xb0, 0x93, 0x4e, 0xcb, 0x29, 0x89, 0x95, 0xce, 0x4a, 0xee, 0x6a,
	0xc5, 0xec, 0x03, 0xed, 0x86, 0x14, 0x73, 0xf0, 0x05, 0x5c, 0x7c, 0xa1, 0xbc, 0x20, 0x99, 0x7c,
	0xdc, 0x88, 0xec, 0x57, 0xdf, 0xe6, 0x14, 0x9f, 0xc3, 0xf9, 0x13, 0x23, 0x6e, 0x78, 0xc6, 0xdc,
	0x6d, 0x8d, 0x55, 0x4e, 0x5c, 0xad, 0x55, 0x93, 0xc4, 0x3f, 0x53, 0x49, 0x0c, 0xd0, 0x85, 0x93,
	0x40, 0x4a, 0x21, 0xd9, 0xe0, 0xed, 0x6b, 0xb0, 0xbb, 0xd3, 0xe3, 0x00, 0x9c, 0x88, 0x7e, 0xd7,
	0xfa, 0x04, 0x7a, 0x53, 0xbd, 0x56, 0x44, 0x55, 0x29, 0x78, 0x45, 0xcc, 0x98, 0x5f, 0x81, 0xc9,
	0x49, 0xe1, 0x7b, 0x70, 0x32, 0xc1, 0x39, 0x65, 0x0a, 0xcf, 0x0e, 0xfe, 0xc8, 0xe4, 0x50, 0x98,
	0x1e, 0xcd, 0x8c, 0x77, 0xc6, 0x43, 0xf7, 0x48, 0x3e, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x94,
	0x58, 0x5a, 0x7f, 0x3c, 0x02, 0x00, 0x00,
}
